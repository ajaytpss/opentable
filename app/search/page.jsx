"use client";

import { useContext, useEffect, useState } from "react";
import Card from "./components/Card";
import Header from "./components/Header";
import SearchSidebar from "./components/SearchSidebar";
import { AuthenticationContext } from "../context/authContext";
import axios from "axios";
import { baseUrl } from "@/lib/config";
import { toast } from "react-hot-toast";
const metadata = {
  title: "Search | Restaurant",
  description: "Generated by create next app",
};

export default function Search(params) {
  const { searchLoading, searchKeyword, setSearchLoading, setSearchKeyword } =
    useContext(AuthenticationContext);
  const [listingData, setListingData] = useState([]);
  const [noResults, setNoResults] = useState([]);
  const [noMessage, setNoMessage] = useState([]);

  useEffect(() => {
    console.log("run");
    if (params.searchParams.keywords || searchKeyword) {
      setSearchKeyword(params.searchParams.keywords);
      fetchResults();
    }
  }, [params.searchParams.keywords || searchKeyword]);

  const fetchResults = async () => {
    setSearchLoading(true);
    setListingData([]);
    const keywords = params.searchParams.keywords || searchKeyword;
    try {
      const res = await axios.post(
        `${baseUrl}/api/search?keywords=${keywords}`
      );
      const data = res.data;
      if (data.results) {
        setListingData(data.data);
        setNoResults(data.results);
      } else {
        setNoResults(data.results);
        setNoMessage(data.message);
      }
    } catch (error) {
      toast.error(error);
    }
    setSearchLoading(false);
  };

  return (
    <>
      <Header />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <SearchSidebar />
        <div className="w-5/6">
          {searchLoading && (
            <p className="text-center my-10">Loading... Please wait!</p>
          )}
          {!searchLoading && !noResults && (
            <p className="text-center my-10">{noMessage}</p>
          )}
          {!searchLoading &&
            noResults &&
            listingData.map((val, i) => <Card key={i} data={val} />)}
        </div>
      </div>
    </>
  );
}
